"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[525],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},N=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),N=o(n),u=l,s=N["".concat(p,".").concat(u)]||N[u]||k[u]||r;return n?a.createElement(s,i(i({ref:t},m),{},{components:n})):a.createElement(s,i({ref:t},m))}));function u(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=N;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:l,i[1]=d;for(var o=2;o<r;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}N.displayName="MDXCreateElement"},1563:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>u,frontMatter:()=>d,metadata:()=>o,toc:()=>k});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],d={id:"syntax",title:"Syntax",sidebar_label:"Syntax"},p=void 0,o={unversionedId:"syntax",id:"syntax",title:"Syntax",description:"Comments",source:"@site/docs/syntax.md",sourceDirName:".",slug:"/syntax",permalink:"/catlang/docs/syntax",draft:!1,editUrl:"https://github.com/aszecsei/catlang/edit/master/website/docs/syntax.md",tags:[],version:"current",frontMatter:{id:"syntax",title:"Syntax",sidebar_label:"Syntax"},sidebar:"docs",previous:{title:"Overview",permalink:"/catlang/docs/overview"},next:{title:"Types",permalink:"/catlang/docs/types"}},m={},k=[{value:"Comments",id:"comments",level:2},{value:"Reserved Words",id:"reserved-words",level:2},{value:"Identifiers",id:"identifiers",level:2},{value:"Blocks",id:"blocks",level:2},{value:"Precedence and Associativity",id:"precedence-and-associativity",level:2}],N={toc:k};function u(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"comments"},"Comments"),(0,r.kt)("p",null,"Line comments start with ",(0,r.kt)("inlineCode",{parentName:"p"},"//")," and end at the end of the line:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-catlang"},"// This is a comment.\n")),(0,r.kt)("p",null,"Block comments start with ",(0,r.kt)("inlineCode",{parentName:"p"},"/*")," and end with ",(0,r.kt)("inlineCode",{parentName:"p"},"*/"),". They can span multiple lines:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-catlang"},"/* This\n   is\n   a\n   multi-line\n   comment. */\n")),(0,r.kt)("p",null,"Unlike C, block comments can nest in catlang:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-catlang"},"/* this is /* a nested */ comment. */\n")),(0,r.kt)("p",null,"Thus, you can easily comment out an entire block of code, even if the code already contains block comments."),(0,r.kt)("h2",{id:"reserved-words"},"Reserved Words"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"any")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"let")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"const")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"new")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"delete")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"typeof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"is")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"as")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"in")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"function")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"return")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"struct")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"enum")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"owned")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"import")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"export")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"for")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"while")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"do")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"loop")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"if")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"else")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"break")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"continue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"true")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"false")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"this")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"volatile")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"unreachable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"namespace")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"using"))),(0,r.kt)("h2",{id:"identifiers"},"Identifiers"),(0,r.kt)("p",null,"Naming rules are similar to other programming languages. Identifiers start with either a letter or underscore and may contain letters, digits, and underscores. They are case-sensitive."),(0,r.kt)("h2",{id:"blocks"},"Blocks"),(0,r.kt)("p",null,"Curly braces (",(0,r.kt)("inlineCode",{parentName:"p"},"{}"),") define blocks. You can use a block anywhere a statement is allowed, such as in control flow statements. Function bodies are also blocks."),(0,r.kt)("h2",{id:"precedence-and-associativity"},"Precedence and Associativity"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Precedence"),(0,r.kt)("th",{parentName:"tr",align:null},"Operator"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Associativity"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"::")),(0,r.kt)("td",{parentName:"tr",align:null},"Scope resolution"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"a++")," ",(0,r.kt)("inlineCode",{parentName:"td"},"a--")," ",(0,r.kt)("inlineCode",{parentName:"td"},"a!")," ",(0,r.kt)("inlineCode",{parentName:"td"},"a()")," ",(0,r.kt)("inlineCode",{parentName:"td"},"a[]")," ",(0,r.kt)("inlineCode",{parentName:"td"},"a.")," ",(0,r.kt)("inlineCode",{parentName:"td"},"?")),(0,r.kt)("td",{parentName:"tr",align:null},"Unary suffix, function call, subscript, member access, null conditional"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"++a")," ",(0,r.kt)("inlineCode",{parentName:"td"},"--a")," ",(0,r.kt)("inlineCode",{parentName:"td"},"+a")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-a")," ",(0,r.kt)("inlineCode",{parentName:"td"},"!a")," ",(0,r.kt)("inlineCode",{parentName:"td"},"~a")," ",(0,r.kt)("inlineCode",{parentName:"td"},"as")," ",(0,r.kt)("inlineCode",{parentName:"td"},"@a")," ",(0,r.kt)("inlineCode",{parentName:"td"},"*a")," ",(0,r.kt)("inlineCode",{parentName:"td"},"??")),(0,r.kt)("td",{parentName:"tr",align:null},"Unary prefix, casting, null coalesce"),(0,r.kt)("td",{parentName:"tr",align:null},"Right-to-left")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"*")," ",(0,r.kt)("inlineCode",{parentName:"td"},"/")," ",(0,r.kt)("inlineCode",{parentName:"td"},"%")),(0,r.kt)("td",{parentName:"tr",align:null},"Multiply, divide, modulo"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"+")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-")),(0,r.kt)("td",{parentName:"tr",align:null},"Add, subtract"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"..")," ",(0,r.kt)("inlineCode",{parentName:"td"},"...")),(0,r.kt)("td",{parentName:"tr",align:null},"Range"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<<")," ",(0,r.kt)("inlineCode",{parentName:"td"},">>")),(0,r.kt)("td",{parentName:"tr",align:null},"Bitshift"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"&")),(0,r.kt)("td",{parentName:"tr",align:null},"Bitwise and"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"^")),(0,r.kt)("td",{parentName:"tr",align:null},"Bitwise xor"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"|")),(0,r.kt)("td",{parentName:"tr",align:null},"Bitwise or"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"11"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<")," ",(0,r.kt)("inlineCode",{parentName:"td"},"<=")," ",(0,r.kt)("inlineCode",{parentName:"td"},">")," ",(0,r.kt)("inlineCode",{parentName:"td"},">=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"in")),(0,r.kt)("td",{parentName:"tr",align:null},"Comparison"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"12"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"is")),(0,r.kt)("td",{parentName:"tr",align:null},"Type test"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"13"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"==")," ",(0,r.kt)("inlineCode",{parentName:"td"},"!=")),(0,r.kt)("td",{parentName:"tr",align:null},"Equality"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"14"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"&&")),(0,r.kt)("td",{parentName:"tr",align:null},"Logical and"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"15"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"|"," ","|")),(0,r.kt)("td",{parentName:"tr",align:null},"Logical or"),(0,r.kt)("td",{parentName:"tr",align:null},"Left-to-right")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"16"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"a ? b : c")),(0,r.kt)("td",{parentName:"tr",align:null},"Ternary"),(0,r.kt)("td",{parentName:"tr",align:null},"Right-to-left")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"17"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"+=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"-=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"*=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"/=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"%=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"&=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"&&=")," ",(0,r.kt)("code",null,"|","=")," ",(0,r.kt)("code",null,"|","|","=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"^=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"<<=")," ",(0,r.kt)("inlineCode",{parentName:"td"},">>=")," ",(0,r.kt)("inlineCode",{parentName:"td"},"??=")),(0,r.kt)("td",{parentName:"tr",align:null},"Assignment"),(0,r.kt)("td",{parentName:"tr",align:null},"Right-to-left")))))}u.isMDXComponent=!0}}]);