"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[538],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),u=o,y=p["".concat(s,".").concat(u)]||p[u]||m[u]||i;return n?a.createElement(y,r(r({ref:t},d),{},{components:n})):a.createElement(y,r({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7354:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],l={id:"what-and-why",title:"Introduction",sidebar_label:"Introduction",slug:"/"},s=void 0,c={unversionedId:"what-and-why",id:"what-and-why",title:"Introduction",description:"Catlang is a systems programming language with a C-like syntax that compiles to native code. It is statically typed, and does not include automatic memory management.",source:"@site/docs/what-and-why.md",sourceDirName:".",slug:"/",permalink:"/catlang/docs/",draft:!1,editUrl:"https://github.com/aszecsei/catlang/edit/master/website/docs/what-and-why.md",tags:[],version:"current",frontMatter:{id:"what-and-why",title:"Introduction",sidebar_label:"Introduction",slug:"/"},sidebar:"docs",next:{title:"Installation",permalink:"/catlang/docs/installation"}},d={},m=[{value:"Phases of Compilation",id:"phases-of-compilation",level:2},{value:"Lexical Analysis",id:"lexical-analysis",level:3},{value:"Syntax Analysis",id:"syntax-analysis",level:3},{value:"Semantic Analysis",id:"semantic-analysis",level:3},{value:"Optimization",id:"optimization",level:3},{value:"Code Generation",id:"code-generation",level:3},{value:"Memory Model",id:"memory-model",level:2},{value:"Object Model",id:"object-model",level:2},{value:"Why Catlang?",id:"why-catlang",level:2}],p={toc:m};function u(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Catlang is a systems programming language with a C-like syntax that compiles to native code. It is statically typed, and does not include automatic memory management."),(0,i.kt)("p",null,"It has been designed for both speed and kindness."),(0,i.kt)("h2",{id:"phases-of-compilation"},"Phases of Compilation"),(0,i.kt)("h3",{id:"lexical-analysis"},"Lexical Analysis"),(0,i.kt)("h3",{id:"syntax-analysis"},"Syntax Analysis"),(0,i.kt)("h3",{id:"semantic-analysis"},"Semantic Analysis"),(0,i.kt)("h3",{id:"optimization"},"Optimization"),(0,i.kt)("h3",{id:"code-generation"},"Code Generation"),(0,i.kt)("h2",{id:"memory-model"},"Memory Model"),(0,i.kt)("h2",{id:"object-model"},"Object Model"),(0,i.kt)("h2",{id:"why-catlang"},"Why Catlang?"),(0,i.kt)("p",null,'My goal with Catlang is to produce a programming language well-suited for low-level programming (such as game development) which includes many of the features common in more modern programming languages. I hardly propose that Catlang is a universal fix, but it seems like an engaging venture for my specific uses (and personal opinions about what a "good programming language" looks like).'),(0,i.kt)("p",null,"A few notes about specific opinions I hold: ",(0,i.kt)("em",{parentName:"p"},"kind")," type-safety is important. Compilers should be able to infer as much as possible. Functions should be first-class; purely functional languages are too rigid, especially when performance is critical, but enabling programmers to use ",(0,i.kt)("em",{parentName:"p"},"aspects")," of functional languages seems the best of both worlds."))}u.isMDXComponent=!0}}]);